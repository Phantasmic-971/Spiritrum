using Microsoft.Xna.Framework;
using Terraria;
using Terraria.ID;
using Terraria.ModLoader;

namespace Spectrum.Content.Items
{
    public class Phantasmic : ModItem
    {
        public override void SetStaticDefaults()
        {
            // Tooltip is handled in the localization file.
        }

        public override void SetDefaults()
        {
            Item.damage = 80; // Base damage of the LMG
            Item.DamageType = DamageClass.Ranged; // Ranged weapon
            Item.width = 30; // Reduced sprite width
            Item.height = 15; // Reduced sprite height
            Item.useTime = 12; // Very fast use time
            Item.useAnimation = 12; // Matches use time
            Item.useStyle = ItemUseStyleID.Shoot; // Gun style
            Item.noMelee = true; // Does not deal melee damage
            Item.knockBack = 2; // Low knockback
            Item.value = Item.buyPrice(gold: 20); // Value in coins
            Item.rare = ItemRarityID.Cyan; // Post-Golem rarity
            Item.UseSound = SoundID.Item5; // Bow sound
            Item.autoReuse = true; // Automatically reuses
            Item.shoot = ProjectileID.Phantasm; // Shoots arrows
            Item.shootSpeed = 22f; // Arrow speed
            Item.useAmmo = AmmoID.Arrow; // Uses arrows as ammo
        }

        public override bool Shoot(Player player, EntitySource_ItemUse_WithAmmo source, Vector2 position, Vector2 velocity, int type, int damage, float knockback) {
			const int NumProjectiles = 4; // The number of projectiles that this gun will shoot.

			for (int i = 0; i < NumProjectiles; i++) {
				// Rotate the velocity randomly by 30 degrees at max.
				Vector2 newVelocity = velocity.RotatedByRandom(MathHelper.ToRadians(3));

				// Decrease velocity randomly for nicer visuals.
				newVelocity *= 1f - Main.rand.NextFloat(0.1f);

				// Create a projectile.
				Projectile.NewProjectileDirect(source, position, newVelocity, type, damage, knockback, player.whoAmI);
			}
        }

        public override Vector2? HoldoutOffset()
        {
            return new Vector2(5, 0); // Adjust the sprite position to be more inside the player
        }

        public override void AddRecipes()
        {
            Recipe recipe = CreateRecipe();
            recipe.AddIngredient(ItemID.Phantasm, 1); // Requires 1 Phantasm
            recipe.AddIngredient(ItemID.LunarBar, 10); // Requires 10 Luminite Bars
            recipe.AddTile(TileID.MythrilAnvil); // Crafted at a Mythril or Orichalcum Anvil
            recipe.Register();
        }
    }
}
